{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209123cb9c427879a81f6168e1a073d2e33e245188fbda3bee653a8b36be4dac9164736f6c63430008150033","sourceMap":"370:881:35:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;370:881:35;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209123cb9c427879a81f6168e1a073d2e33e245188fbda3bee653a8b36be4dac9164736f6c63430008150033","sourceMap":"370:881:35:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xb7b0ca116d5a604c8433c08e3f1a8a974a2e66e86f1bcf7d5cf2b39a109a5262\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51c2d2de7e7d5858d3830b6a54143ba122af2356eb8c1bde170c335c28c2fbac\",\"dweb:/ipfs/QmSnPmGexrJ6vAt7j136gbeR6NMReZGuUjCFhSYyojGHmf\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.21+commit.d9974bed"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin-contracts/contracts/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/Counters.sol":"Counters"},"evmVersion":"paris","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Counters.sol":{"keccak256":"0xb7b0ca116d5a604c8433c08e3f1a8a974a2e66e86f1bcf7d5cf2b39a109a5262","urls":["bzz-raw://51c2d2de7e7d5858d3830b6a54143ba122af2356eb8c1bde170c335c28c2fbac","dweb:/ipfs/QmSnPmGexrJ6vAt7j136gbeR6NMReZGuUjCFhSYyojGHmf"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Counters.sol","id":47154,"exportedSymbols":{"Counters":[47153]},"nodeType":"SourceUnit","src":"33:1218:35","nodes":[{"id":47094,"nodeType":"PragmaDirective","src":"33:23:35","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":47153,"nodeType":"ContractDefinition","src":"370:881:35","nodes":[{"id":47098,"nodeType":"StructDefinition","src":"393:374:35","nodes":[],"canonicalName":"Counters.Counter","members":[{"constant":false,"id":47097,"mutability":"mutable","name":"_value","nameLocation":"740:6:35","nodeType":"VariableDeclaration","scope":47098,"src":"732:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47096,"name":"uint256","nodeType":"ElementaryTypeName","src":"732:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"400:7:35","scope":47153,"visibility":"public"},{"id":47110,"nodeType":"FunctionDefinition","src":"773:112:35","nodes":[],"body":{"id":47109,"nodeType":"Block","src":"847:38:35","nodes":[],"statements":[{"expression":{"expression":{"id":47106,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47101,"src":"864:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$47098_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":47107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"872:6:35","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":47097,"src":"864:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":47105,"id":47108,"nodeType":"Return","src":"857:21:35"}]},"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"782:7:35","parameters":{"id":47102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47101,"mutability":"mutable","name":"counter","nameLocation":"806:7:35","nodeType":"VariableDeclaration","scope":47110,"src":"790:23:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$47098_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":47100,"nodeType":"UserDefinedTypeName","pathNode":{"id":47099,"name":"Counter","nameLocations":["790:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":47098,"src":"790:7:35"},"referencedDeclaration":47098,"src":"790:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$47098_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"789:25:35"},"returnParameters":{"id":47105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":47110,"src":"838:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47103,"name":"uint256","nodeType":"ElementaryTypeName","src":"838:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"837:9:35"},"scope":47153,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":47124,"nodeType":"FunctionDefinition","src":"891:123:35","nodes":[],"body":{"id":47123,"nodeType":"Block","src":"944:70:35","nodes":[],"statements":[{"id":47122,"nodeType":"UncheckedBlock","src":"954:54:35","statements":[{"expression":{"id":47120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":47116,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47113,"src":"978:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$47098_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":47118,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"986:6:35","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":47097,"src":"978:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":47119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"978:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":47121,"nodeType":"ExpressionStatement","src":"978:19:35"}]}]},"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"900:9:35","parameters":{"id":47114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47113,"mutability":"mutable","name":"counter","nameLocation":"926:7:35","nodeType":"VariableDeclaration","scope":47124,"src":"910:23:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$47098_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":47112,"nodeType":"UserDefinedTypeName","pathNode":{"id":47111,"name":"Counter","nameLocations":["910:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":47098,"src":"910:7:35"},"referencedDeclaration":47098,"src":"910:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$47098_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"909:25:35"},"returnParameters":{"id":47115,"nodeType":"ParameterList","parameters":[],"src":"944:0:35"},"scope":47153,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":47152,"nodeType":"FunctionDefinition","src":"1020:229:35","nodes":[],"body":{"id":47151,"nodeType":"Block","src":"1073:176:35","nodes":[],"statements":[{"assignments":[47131],"declarations":[{"constant":false,"id":47131,"mutability":"mutable","name":"value","nameLocation":"1091:5:35","nodeType":"VariableDeclaration","scope":47151,"src":"1083:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47130,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":47134,"initialValue":{"expression":{"id":47132,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47127,"src":"1099:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$47098_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":47133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1107:6:35","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":47097,"src":"1099:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1083:30:35"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":47138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47131,"src":"1131:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":47137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1139:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1131:9:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":47139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1142:29:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":47135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1123:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":47140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1123:49:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47141,"nodeType":"ExpressionStatement","src":"1123:49:35"},{"id":47150,"nodeType":"UncheckedBlock","src":"1182:61:35","statements":[{"expression":{"id":47148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":47142,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47127,"src":"1206:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$47098_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":47144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1214:6:35","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":47097,"src":"1206:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":47147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47131,"src":"1223:5:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":47146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1231:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1223:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1206:26:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":47149,"nodeType":"ExpressionStatement","src":"1206:26:35"}]}]},"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1029:9:35","parameters":{"id":47128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47127,"mutability":"mutable","name":"counter","nameLocation":"1055:7:35","nodeType":"VariableDeclaration","scope":47152,"src":"1039:23:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$47098_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":47126,"nodeType":"UserDefinedTypeName","pathNode":{"id":47125,"name":"Counter","nameLocations":["1039:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":47098,"src":"1039:7:35"},"referencedDeclaration":47098,"src":"1039:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$47098_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1038:25:35"},"returnParameters":{"id":47129,"nodeType":"ParameterList","parameters":[],"src":"1073:0:35"},"scope":47153,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":47095,"nodeType":"StructuredDocumentation","src":"58:311:35","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"linearizedBaseContracts":[47153],"name":"Counters","nameLocation":"378:8:35","scope":47154,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":35}